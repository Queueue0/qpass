package crypto

import (
	"net"
	"time"
)

type secureConn struct {
	c net.Conn
	ss []byte // Shared Secret, generated by dh
}

func NewClientConn(remote string) (*secureConn, error) {
	return &secureConn{}, nil
}

func NewServerConn(c net.Conn) (*secureConn, error) {
	return &secureConn{}, nil
}

func (s *secureConn) Read(b []byte) (int, error) {
	return 0, nil
}

func (s *secureConn) Write(b []byte) (int, error) {
	return 0, nil
}

func (s *secureConn) Close() error {
	return s.c.Close()
}

func (s *secureConn) LocalAddr() net.Addr {
	return s.c.LocalAddr()
}

func (s *secureConn) RemoteAddr() net.Addr {
	return s.c.RemoteAddr()
}

func (s *secureConn) SetDeadline(t time.Time) error {
	return s.c.SetDeadline(t)
}

func (s *secureConn) SetReadDeadline(t time.Time) error {
	return s.c.SetReadDeadline(t)
}

func (s *secureConn) SetWriteDeadline(t time.Time) error {
	return s.c.SetWriteDeadline(t)
}
